{"version":3,"sources":["assets/logo.png","assets/background-login.png","assets/background-up.jpg","styles/global.ts","services/api.ts","hooks/auth.tsx","components/ToastContainer/styles.ts","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/index.tsx","routes/Route.tsx","utils/getValidationErrors.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","Provider","value","useAuth","context","useContext","Error","Container","styled","div","toastTypeVariations","info","css","success","error","animated","props","type","hasDescription","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","description","title","onClick","ToastContainer","messages","messagesWithTransitions","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","oldMessages","filter","AppProvider","Route","isPrivate","Component","component","rest","render","location","to","pathname","state","getValidationErrors","err","validationErrors","inner","forEach","path","Tooltip","className","isErrored","isFocused","isFilled","Input","name","Icon","icon","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","handleInputFocus","handleInputBlur","current","ref","onFocus","onBlur","color","button","shade","Button","Content","appearFromLeft","keyframes","AnimationContainer","Background","background","SignIn","formRef","history","useHistory","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","src","logoImg","alt","onSubmit","FiMail","placeholder","FiLock","href","appearFromRight","min","FiUser","Dashboard","Routes","exact","SignUp","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.711a1442.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.597c2f13.png\";","module.exports = __webpack_public_path__ + \"static/media/background-login.21280aff.png\";","module.exports = __webpack_public_path__ + \"static/media/background-up.0bde0532.jpg\";","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      outline: 0;\n  }\n\n  body {\n    background: #312E38;\n    color: #FFF;\n    -webkit-box-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: 'Roboto Slab', serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3333',\n})\n\nexport default api\n","import React, { createContext, useCallback, useState, useContext } from 'react';\nimport api from '../services/api';\n\ninterface AuthState {\n  token: string;\n  user: object;\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n}\n\ninterface AuthContexData {\n  user: object;\n  signIn(credentials: SignInCredentials): Promise<void>;\n  signOut(): void;\n}\n\nconst AuthContext = createContext<AuthContexData>({} as AuthContexData);\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem('@Barber:token');\n    const user = localStorage.getItem('@Barber:user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post('sessions', {\n      email,\n      password,\n    });\n\n    const { token, user } = response.data;\n\n    localStorage.setItem('@Barber:token', token);\n    localStorage.setItem('@Barber:user', JSON.stringify(user));\n\n    setData({ token, user });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem('@Barber:token');\n    localStorage.removeItem('@Barber:user');\n\n    setData({} as AuthState);\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nfunction useAuth(): AuthContexData {\n  const context = useContext(AuthContext);\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  padding: 30px;\n  overflow: hidden;\n`;\n","import styled, { css } from 'styled-components';\nimport { animated } from 'react-spring';\n\ninterface ContainerProps {\n  type?: 'success' | 'error' | 'info';\n  hasDescription: boolean;\n}\n\nconst toastTypeVariations = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `,\n};\n\nexport const Container = styled(animated.div)<ContainerProps>`\n  width: 360px;\n\n  position: relative;\n  padding: 16px 30px 16px 16px;\n  border-radius: 10px;\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\n\n  display: flex;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) => toastTypeVariations[props.type || 'info']}\n\n  > svg {\n    margin: 4px 12px 0 0;\n  }\n\n  div {\n    flex: 1;\n\n    p {\n      margin-top: 4px;\n      font-size: 14px;\n      opacity: 0.8;\n      line-height: 20px;\n    }\n  }\n\n  button {\n    position: absolute;\n    right: 16px;\n    top: 19px;\n    opacity: 0.6;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n\n  ${(props) =>\n    !props.hasDescription &&\n    css`\n      align-items: center;\n\n      svg {\n        margin-top: 0;\n      }\n    `}\n`;\n","import React, { useEffect } from 'react';\n\nimport { ToastMessage, useToast } from '../../../hooks/toast';\n\nimport {\n  FiAlertCircle,\n  FiCheckCircle,\n  FiInfo,\n  FiXCircle,\n} from 'react-icons/fi';\nimport { Container } from './styles';\n\ninterface ToastProps {\n  message: ToastMessage;\n  style: object;\n}\n\nconst icons = {\n  info: <FiInfo size={24} />,\n  error: <FiAlertCircle size={24} />,\n  success: <FiCheckCircle size={24} />,\n};\n\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\n  const { removeToast } = useToast();\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(message.id);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [removeToast, message.id]);\n\n  return (\n    <Container\n      type={message.type}\n      hasDescription={!!message.description}\n      style={style}\n    >\n      {icons[message.type || 'info']}\n\n      <div>\n        <strong>{message.title}</strong>\n        {message.description && <p>{message.description}</p>}\n      </div>\n\n      <button onClick={() => removeToast(message.id)} type=\"button\">\n        <FiXCircle size={18} />\n      </button>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import React from 'react';\nimport { useTransition } from 'react-spring';\n\nimport { Container } from './styles';\nimport { ToastMessage } from '../../hooks/toast';\nimport Toast from './Toast';\n\ninterface ToastContainerProps {\n  messages: ToastMessage[];\n}\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\n  const messagesWithTransitions = useTransition(\n    messages,\n    (message) => message.id,\n    {\n      from: { right: '-120%', opacity: 0 },\n      enter: { right: '0%', opacity: 1 },\n      leave: { right: '-120%', opacity: 0 },\n    },\n  );\n\n  return (\n    <Container>\n      {messagesWithTransitions.map(({ item, key, props }) => (\n        <Toast key={key} style={props} message={item} />\n      ))}\n    </Container>\n  );\n};\n\nexport default ToastContainer;\n","import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { uuid } from 'uuidv4';\n\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'success' | 'error' | 'info';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(message: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = uuid();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages((oldMessages) => [...oldMessages, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages((oldMessages) =>\n      oldMessages.filter((message) => message.id !== id),\n    );\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n","import React from 'react';\n\nimport { AuthProvider } from './auth';\nimport { ToastProvider } from './toast';\n\nconst AppProvider: React.FC = ({ children }) => (\n  <AuthProvider>\n    <ToastProvider>{children}</ToastProvider>\n  </AuthProvider>\n);\n\nexport default AppProvider;\n","import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactRouteProps,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../hooks/auth';\n\ninterface RouteProps extends ReactRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  // true/true = ok\n  // true/false = Redirecionar ele pro login\n  // false/true = Redirecionar para Dashboard\n  // false/false = OK\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    validationErrors[error.path] = error.message;\n  })\n\n  return validationErrors;\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #ff9000;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    opacity: 0;\n    transition: opacity 0.4s;\n    visibility: hidden;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    color: #312e38;\n\n    &::before {\n      content: '';\n      border-style: solid;\n      border-color: #ff9000 transparent;\n      border-width: 6px 6px 0 6px;\n      bottom: 20px;\n      top: 100%;\n      position: absolute;\n      left: 50%;\n      transform: translateX(-50%);\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ title, className = '', children }) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\n\nimport Tooltip from '../Tooltip';\n\ninterface ContainerProps {\n  isFocused: boolean;\n  isFilled: boolean;\n  isErrored: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  background: #232129;\n  border-radius: 10px;\n  padding: 16px;\n  width: 100%;\n\n  border: 2px solid #232129;\n  color: #666360;\n\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 8px;\n  }\n\n  ${(props) =>\n    props.isErrored &&\n    css`\n      border-color: #c53030;\n    `};\n\n  ${(props) =>\n    props.isFocused &&\n    css`\n      color: #ff9000;\n      border-color: #ff9000;\n    `};\n\n  ${(props) =>\n    props.isFilled &&\n    css`\n      color: #ff9000;\n    `};\n\n  input {\n    flex: 1;\n    background: transparent;\n    border: 0;\n    color: #f4ede8;\n\n    &::placeholder {\n      color: #666360;\n    }\n  }\n\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nexport const Error = styled(Tooltip)`\n  height: 20px;\n  margin-left: 16px;\n\n  svg {\n    margin: 0;\n  }\n\n  span {\n    background: #c53030;\n    color: #fff;\n\n    &::before {\n      border-color: #c53030 transparent;\n    }\n  }\n`;\n","import React, { \n  InputHTMLAttributes, \n  useEffect, \n  useRef, \n  useState, \n  useCallback \n} from 'react';\n\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  \n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true)\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    if (inputRef.current?.value) {\n      setIsFilled(true)\n    } else {\n      setIsFilled(false);\n    }\n  }, []);\n    // setIsFilled(!!inputRef.current?.value);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container\n      isErrored={!!error}\n      isFilled={isFilled}\n      isFocused={isFocused}\n    >\n      { Icon && <Icon  size={20}/>}\n      <input \n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue} \n        ref={inputRef}\n        {...rest} \n      />\n\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle size={20} color=\"#c53030\" />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;","import styled from 'styled-components';\nimport { shade } from 'polished'\n\nexport const Container = styled.button`\n  background: #ff9000;\n  height: 56px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  color: #312E38;\n  width: 100%;\n  font-weight: 500;\n  margin-top: 16px;\n  transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#ff9000')};\n    }`;\n","import React, { ButtonHTMLAttributes } from 'react';\nimport { Container } from './styles';\n\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button: React.FC<ButtonProps> = ({ children, ...rest}) => (\n  <Container type=\"button\"{...rest}>{children}</Container>\n)\n\nexport default Button;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport background from '../../assets/background-login.png';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n\n  img {\n    width: 200px;\n    height: 200px;\n  }\n`;\n\nconst appearFromLeft = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromLeft} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${background}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.png';\n\nimport Input from '../../components/Input/index';\nimport Button from '../../components/Button/index';\n\nimport { Background, Container, AnimationContainer, Content } from './styles';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um email válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        history.push('/dashboard');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação',\n          description: 'Combinação de Login/Senha invalida.',\n        });\n      }\n    },\n    [signIn, addToast, history],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Barber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu logon</h1>\n\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Entrar</Button>\n\n            <a href=\"forgot\">Esqueci minha senha</a>\n          </Form>\n\n          <Link to=\"/create-account\">\n            <FiLogIn />\n            Criar Conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled, { keyframes } from 'styled-components';\nimport { shade } from 'polished';\n\nimport background from '../../assets/background-up.jpg';\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  max-width: 700px;\n\n  img {\n    width: 200px;\n    height: 200px;\n  }\n`;\n\nconst appearFromRight = keyframes`\n  from {\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  animation: ${appearFromRight} 1s;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    text-align: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      display: block;\n      margin-top: 24px;\n      text-decoration: none;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, '#f4ede8')};\n      }\n    }\n  }\n\n  > a {\n    color: #ff9000;\n    display: block;\n    margin-top: 24px;\n    text-decoration: none;\n    transition: color 0.2s;\n\n    display: flex;\n    align-items: center;\n\n    svg {\n      margin-right: 16px;\n    }\n\n    &:hover {\n      color: ${shade(0.2, '#ff9000')};\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background: url(${background}) no-repeat center;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef } from 'react';\nimport { FiMail, FiLock, FiUser, FiArrowLeft } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport api from '../../services/api';\n\nimport { useToast } from '../../hooks/toast';\n\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.png';\n\nimport Input from '../../components/Input/index';\nimport Button from '../../components/Button/index';\n\nimport { Background, Container, AnimationContainer, Content } from './styles';\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n  const { addToast } = useToast();\n  const history = useHistory();\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome obrigatório'),\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um email válido'),\n          password: Yup.string().min(6, 'Mínimo de 6 caracters'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await api.post('/users', data);\n\n        history.push('/');\n\n        addToast({\n          type: 'success',\n          title: 'Cadastro realizado!',\n          description: 'Você já pode fazer seu login no aplicativo',\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description:\n            'Ocorreu um erro ao relizar o cadastro, por favor check os dados informados.',\n        });\n      }\n    },\n    [addToast, history],\n  );\n\n  return (\n    <Container>\n      <Background />\n\n      <Content>\n        <AnimationContainer>\n          <img src={logoImg} alt=\"Barber\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu cadastro</h1>\n\n            <Input name=\"name\" icon={FiUser} placeholder=\"Name\" />\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button type=\"submit\">Cadastrar</Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nconst Dashboard: React.FC = () => {\n  return (\n    <Container>\n      <h1>Dashboard</h1>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport Route from './Route';\n\nimport SignIn from '../pages/SignIn';\nimport SignUp from '../pages/SignUp';\n\nimport Dashboard from '../pages/Dashboard';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={SignIn} />\n    <Route path=\"/create-account\" component={SignUp} />\n\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\n\nimport AppProvider from './hooks';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <Router>\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}